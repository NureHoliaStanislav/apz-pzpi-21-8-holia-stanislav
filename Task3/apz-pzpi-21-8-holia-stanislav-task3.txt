1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

	Користувачами розробленого IoT-модулю є 2 типи акторів: інструктор та солдат. 
Взаємодію кожної ролі користувачів з IoT-модулем представлено на діаграмі прецедентів (див. Рис. 1).
Таким чином, за допомогою діаграми прецедентів було визначено функціональні потреби та взаємодію різних типів користувачів із IoT-модулем.

2 ПРОГРАМНА РЕАЛІЗАЦІЯ

У зв’язку з обмеженими технічними можливостями функціонал IoT-модулю було реалізовано на мові C++, що дозволяє портувати код на різні типи IoT-пристроїв.
Для користування програмою використовується консольний інтерфейс, налаштування пристрою (серійний номер та посилання на сервер) передаються через аргументи командної строки та зберігаються у файлі з форматом txt. Програма має функції для відправлення запитів, роботи з файлом налаштувань, імітації активації та розмінування міни.
Програма відправляє запити на сервер за допомогою бібліотеки cpr. Запит відправляється у форматі JSON з одним з двох полів: is_defused (інформація про те чи розмінували міну) та is_activated (інформація про те чи активували міну). На сервері ці дані використовуються для оновлення сутності міни.

3 ТЕХНОЛОГІЇ ТА АРХІТЕКТУРНІ РІШЕННЯ

Для написання серверної частини системи було обрано мову програмування С++. Проектним менеджером було обрано CMake, компілятором було обрано Clang. З додаткових бібліотек, була використана бібліотека cpr, котра дозволяє створювати та відправляти http запити.
	Для більш детальної візуалізації використаних технологій було розроблено діаграму пакетів (див. рис. 2).
Для більш детальної візуалізації взаємодії пристрою з користувачами системи було розроблено діаграму взаємодії (див. додат. А.1).
Також на основі взаємодії пристрою було побудовано діаграму діяльності, що відображає взаємодію пристрою з сервером (див. додат. Б.1).
Таким чином, за допомогою діаграм пакетів, взаємодії та діяльності було визначено основні технології та архітектуру системи.
Приклади коду функціональної реалізації IoT частини системи представлено у додатку В.

ВИСНОВКИ

	Під час виконання лабораторної роботи я  спроектував та реалізував IoT-складову програмної системи. Результатом є розроблена програмна реалізація IoT-компоненту, що успішно взаємодіє з сервером та розширює функціонал системи.
